// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SideOffice.Infra.Data.Context;

namespace SideOffice.Infra.Data.Migrations
{
    [DbContext(typeof(SideOfficeContext))]
    partial class SideOfficeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SideOffice.Domain.Entities.Rent", b =>
                {
                    b.Property<Guid>("Rent_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("End_datetime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Room_id");

                    b.Property<DateTime>("Start_datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("User_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Rent_id");

                    b.HasIndex("Room_id");

                    b.HasIndex("User_id");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("SideOffice.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Has_air_conditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_ethernet")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_tv")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_webcam")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_wifi")
                        .HasColumnType("bit");

                    b.Property<decimal>("Hour_price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<decimal>("Square_meters")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("numeric(10, 2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("Room_id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SideOffice.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country_code")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Last_login_datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)");

                    b.Property<DateTime>("Registration_datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("User_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SideOffice.Domain.Entities.Rent", b =>
                {
                    b.HasOne("SideOffice.Domain.Entities.Room", "Room")
                        .WithMany("Rents")
                        .HasForeignKey("Room_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SideOffice.Domain.Entities.User", "User")
                        .WithMany("Rents")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
